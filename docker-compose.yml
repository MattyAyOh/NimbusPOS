version: '3.3'

services:
  client:
    restart: always
    ports:
      - $PORT_CLIENT:3000
    build: .
    stdin_open: true
    tty: true
    command: yarn start
    depends_on:
      - web
    environment:
      NODE_ENV: development
      REACT_APP_URL_API: $URL_API
      # REACT_APP_MINIO_HOST: $MINIO_HOST
      # REACT_APP_MINIO_PORT: $MINIO_PORT
      # REACT_APP_MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      # REACT_APP_MINIO_SECRET_KEY: $MINIO_SECRET_KEY
      CHOKIDAR_USEPOLLING: 'true'
    volumes:
      - .:/usr/src

  db:
    restart: always
    image: postgres

  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.2
    ports:
    - 5000:8080
    depends_on:
    - db
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@db:5432/development
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_PASSWORD

  # For an example of running multiple connected Minio services, see
  # https://github.com/minio/minio/blob/master/docs/orchestration/docker-compose/docker-compose.yaml
  # minio1:
  #   image: minio/minio:RELEASE.2019-04-09T01-22-30Z
  #   volumes:
  #    - photos_volume_1:/data
  #   ports:
  #    - $MINIO_PORT:9000
  #   environment:
  #    MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
  #    MINIO_SECRET_KEY: $MINIO_SECRET_KEY
  #   command: server http://minio1/data

  web:
    image: assemble/foundation
    environment:
      - DATA=postgres://postgres:postgres@db
      - PASSWORD
      - PORT=3000
      - RAILS_ENV=development
    ports:
      - $PORT_API:3000
    volumes:
      - ./db:/foundation/db
      - ./models:/foundation/app/models
    depends_on:
      - db
    restart: always

# volumes:
#   photos_volume_1:
